name: Build and deploy ASP.Net Core app to Azure Web App - serviceorders

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{github.workspace}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{github.workspace}}/myapp

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and run Docker Compose services
        run: |
          docker-compose up -d

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'  # Adjust version if needed

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Test
        run: |
          dotnet test --configuration Release --logger trx --results-directory TestResults --collect:"XPlat Code Coverage"
        
      - name: Convert coverage report to cobertura format
        run: |
          reportgenerator "-reports:TestResults/coverage.cobertura.xml" "-targetdir:coveragereport" "-reporttypes:cobertura"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coveragereport

      - name: Tear down Docker Compose services
        run: docker-compose down

  sonar:
    name: Build and analyze
    runs-on: windows-latest
    needs: test
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'  # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .
